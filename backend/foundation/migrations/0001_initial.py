# Generated by Django 5.2.5 on 2025-10-19 13:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="权限名称")),
                (
                    "code",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="权限编码"
                    ),
                ),
                ("module", models.CharField(max_length=50, verbose_name="所属模块")),
                ("description", models.TextField(blank=True, verbose_name="权限描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "权限",
                "verbose_name_plural": "权限",
                "db_table": "sys_permission",
                "ordering": ["module", "code"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "employee_no",
                    models.CharField(max_length=50, unique=True, verbose_name="工号"),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="手机号"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, upload_to="avatars/", verbose_name="头像"
                    ),
                ),
                (
                    "position",
                    models.CharField(blank=True, max_length=100, verbose_name="职位"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "男"), ("female", "女"), ("other", "其他")],
                        default="other",
                        max_length=10,
                        verbose_name="性别",
                    ),
                ),
                (
                    "birthday",
                    models.DateField(blank=True, null=True, verbose_name="出生日期"),
                ),
                (
                    "entry_date",
                    models.DateField(blank=True, null=True, verbose_name="入职日期"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "在职"),
                            ("inactive", "离职"),
                            ("suspended", "停职"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="最后登录IP"
                    ),
                ),
                ("remark", models.TextField(blank=True, verbose_name="备注")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="foundation_user_set",
                        related_query_name="foundation_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="foundation_user_set",
                        related_query_name="foundation_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "db_table": "sys_user",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="部门名称")),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="部门编码"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="部门描述")),
                ("sort_order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否启用"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_departments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="部门负责人",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="foundation.department",
                        verbose_name="上级部门",
                    ),
                ),
            ],
            options={
                "verbose_name": "部门",
                "verbose_name_plural": "部门",
                "db_table": "sys_department",
                "ordering": ["sort_order", "code"],
            },
        ),
        migrations.AddField(
            model_name="user",
            name="department",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="users",
                to="foundation.department",
                verbose_name="部门",
            ),
        ),
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="菜单名称")),
                ("title", models.CharField(max_length=100, verbose_name="菜单标题")),
                (
                    "menu_type",
                    models.CharField(
                        choices=[
                            ("directory", "目录"),
                            ("menu", "菜单"),
                            ("button", "按钮"),
                        ],
                        default="menu",
                        max_length=20,
                        verbose_name="菜单类型",
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="路由路径"
                    ),
                ),
                (
                    "component",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="组件路径"
                    ),
                ),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="图标"),
                ),
                ("sort_order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "is_visible",
                    models.BooleanField(default=True, verbose_name="是否可见"),
                ),
                (
                    "is_cache",
                    models.BooleanField(default=True, verbose_name="是否缓存"),
                ),
                (
                    "is_external",
                    models.BooleanField(default=False, verbose_name="是否外链"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="foundation.menu",
                        verbose_name="父菜单",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="menus",
                        to="foundation.permission",
                        verbose_name="关联权限",
                    ),
                ),
            ],
            options={
                "verbose_name": "菜单",
                "verbose_name_plural": "菜单",
                "db_table": "sys_menu",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="角色名称"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="角色编码"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="角色描述")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否启用"),
                ),
                (
                    "is_system",
                    models.BooleanField(
                        default=False,
                        help_text="系统角色不可删除",
                        verbose_name="是否系统角色",
                    ),
                ),
                ("sort_order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="roles",
                        to="foundation.permission",
                        verbose_name="权限",
                    ),
                ),
            ],
            options={
                "verbose_name": "角色",
                "verbose_name_plural": "角色",
                "db_table": "sys_role",
                "ordering": ["sort_order", "code"],
            },
        ),
        migrations.AddField(
            model_name="user",
            name="roles",
            field=models.ManyToManyField(
                blank=True,
                related_name="users",
                to="foundation.role",
                verbose_name="角色",
            ),
        ),
    ]
